<?xml version="1.0" encoding="UTF-8" standalone="yes" ?><resource xmlns="http://www.wxwindows.org/wxxrc" version="2.3.0.1">	<object class="wxPanel" name="msetpanel">		<style>wxTAB_TRAVERSAL</style>		<size>600,500</size>		<object class="wxBoxSizer">			<orient>wxVERTICAL</orient>			<object class="sizeritem">				<option>0</option>				<flag>wxALIGN_TOP|wxALL</flag>				<border>5</border>				<object class="wxBoxSizer">					<orient>wxHORIZONTAL</orient>					<object class="sizeritem">						<option>0</option>						<flag>wxALL</flag>						<border>5</border>						<object class="wxStaticText" name="StaticTextIteration">							<label>Iteration:</label>							<wrap>-1</wrap>						</object>					</object>					<object class="sizeritem">						<option>0</option>						<flag></flag>						<border>5</border>						<object class="wxSpinCtrl" name="SpinCtrlIteration">							<style>wxSP_ARROW_KEYS</style>							<value>6</value>							<min>0</min>							<max>30</max>						</object>					</object>					<object class="sizeritem">						<option>0</option>						<flag>wxALL</flag>						<border>5</border>						<object class="wxStaticText" name="StaticTextInitalValue">							<label>Initial Value p__0 :</label>							<wrap>-1</wrap>						</object>					</object>					<object class="sizeritem">						<option>0</option>						<flag>wxALL</flag>						<border>5</border>						<object class="wxTextCtrl" name="TextCtrlInital_p">							<style>wxTE_PROCESS_ENTER</style>							<size>40,-1</size>							<value>0.0</value>							<maxlength>0</maxlength>						</object>					</object>					<object class="sizeritem">						<option>0</option>						<flag>wxALL</flag>						<border>5</border>						<object class="wxButton" name="ButtonApply">							<label>Apply</label>							<default>0</default>						</object>					</object>				</object>			</object>			<object class="sizeritem">				<option>0</option>				<flag>wxALL|wxEXPAND</flag>				<border>5</border>				<object class="wxBoxSizer">					<orient>wxHORIZONTAL</orient>					<object class="sizeritem">						<option>0</option>						<flag>wxALL</flag>						<border>5</border>						<object class="wxStaticText" name="StaticTextPreference">							<label>Preference: &apos;%d %.2f&apos; % (self.itaration, self.initial__q)</label>							<wrap>-1</wrap>						</object>					</object>				</object>			</object>			<object class="sizeritem">				<option>0</option>				<flag>wxEXPAND | wxALL</flag>				<border>5</border>				<object class="wxNotebook" name="m_notebook1">					<object class="notebookpage">						<label>General</label>						<selected>0</selected>						<object class="wxPanel" name="m_panel22">							<style>wxTAB_TRAVERSAL</style>							<object class="wxGridSizer">								<rows>2</rows>								<cols>2</cols>								<vgap>0</vgap>								<hgap>0</hgap>								<object class="sizeritem">									<option>1</option>									<flag>wxEXPAND</flag>									<border>5</border>									<object class="wxStaticBoxSizer">										<orient>wxVERTICAL</orient>										<label>draw set M</label>										<object class="sizeritem">											<option>1</option>											<flag>wxEXPAND</flag>											<border>5</border>											<object class="wxBoxSizer">												<orient>wxHORIZONTAL</orient>												<object class="sizeritem">													<option>1</option>													<flag>wxEXPAND</flag>													<border>5</border>													<object class="wxBoxSizer">														<orient>wxHORIZONTAL</orient>														<object class="sizeritem">															<option>0</option>															<flag>wxALL</flag>															<border>5</border>															<object class="wxStaticText" name="StaticTextxi_min">																<size>55,-1</size>																<label>min[ξ]:</label>																<wrap>-1</wrap>															</object>														</object>														<object class="sizeritem">															<option>0</option>															<flag>wxALL</flag>															<border>5</border>															<object class="wxTextCtrl" name="TextCtrlxi_min">																<size>40,-1</size>																<value>0.0</value>																<maxlength>0</maxlength>															</object>														</object>														<object class="sizeritem">															<option>0</option>															<flag>wxALL</flag>															<border>5</border>															<object class="wxStaticText" name="StaticTextxi_max">																<size>55,-1</size>																<label>max[ξ]:</label>																<wrap>-1</wrap>															</object>														</object>														<object class="sizeritem">															<option>0</option>															<flag>wxALL</flag>															<border>5</border>															<object class="wxTextCtrl" name="TextCtrlxi_max">																<size>40,-1</size>																<value>1.0</value>																<maxlength>0</maxlength>															</object>														</object>													</object>												</object>											</object>										</object>										<object class="sizeritem">											<option>1</option>											<flag>wxEXPAND</flag>											<border>5</border>											<object class="wxBoxSizer">												<orient>wxVERTICAL</orient>												<object class="sizeritem">													<option>1</option>													<flag>wxEXPAND</flag>													<border>5</border>													<object class="wxBoxSizer">														<orient>wxHORIZONTAL</orient>														<object class="sizeritem">															<option>0</option>															<flag>wxALL</flag>															<border>5</border>															<object class="wxStaticText" name="StaticTexteta_min">																<size>55,-1</size>																<label>min[η]:</label>																<wrap>-1</wrap>															</object>														</object>														<object class="sizeritem">															<option>0</option>															<flag>wxALL</flag>															<border>5</border>															<object class="wxTextCtrl" name="TextCtrleta_min">																<size>40,-1</size>																<value>-0.5</value>																<maxlength>0</maxlength>															</object>														</object>														<object class="sizeritem">															<option>0</option>															<flag>wxALL</flag>															<border>5</border>															<object class="wxStaticText" name="StaticTexteta_max">																<size>55,-1</size>																<label>max[η]:</label>																<wrap>-1</wrap>															</object>														</object>														<object class="sizeritem">															<option>0</option>															<flag>wxALL</flag>															<border>5</border>															<object class="wxTextCtrl" name="TextCtrleta_max">																<size>40,-1</size>																<value>0.5</value>																<maxlength>0</maxlength>															</object>														</object>													</object>												</object>											</object>										</object>										<object class="sizeritem">											<option>1</option>											<flag>wxEXPAND</flag>											<border>5</border>											<object class="wxBoxSizer">												<orient>wxHORIZONTAL</orient>												<object class="sizeritem">													<option>0</option>													<flag>wxALL</flag>													<border>5</border>													<object class="wxStaticText" name="StaticTextgrid">														<size>55,-1</size>														<label>grid:</label>														<wrap>-1</wrap>													</object>												</object>												<object class="sizeritem">													<option>0</option>													<flag>wxALL</flag>													<border>5</border>													<object class="wxTextCtrl" name="TextCtrlgrid">														<size>60,-1</size>														<value>300</value>														<maxlength>0</maxlength>													</object>												</object>												<object class="spacer">													<option>1</option>													<flag>wxEXPAND</flag>													<border>5</border>													<size>0,0</size>												</object>												<object class="sizeritem">													<option>0</option>													<flag>wxALL</flag>													<border>5</border>													<object class="wxButton" name="ButtonDrawMset">														<label>Draw set M</label>														<default>0</default>													</object>												</object>											</object>										</object>									</object>								</object>								<object class="sizeritem">									<option>1</option>									<flag>wxEXPAND</flag>									<border>5</border>									<object class="wxStaticBoxSizer">										<orient>wxVERTICAL</orient>										<label>draw set L</label>									</object>								</object>								<object class="sizeritem">									<option>1</option>									<flag>wxEXPAND</flag>									<border>5</border>									<object class="wxStaticBoxSizer">										<orient>wxVERTICAL</orient>										<label>Re p__t vs Im Action</label>									</object>								</object>								<object class="sizeritem">									<option>1</option>									<flag>wxEXPAND</flag>									<border>5</border>									<object class="wxStaticBoxSizer">										<orient>wxVERTICAL</orient>										<label>etc plot</label>									</object>								</object>							</object>						</object>					</object>					<object class="notebookpage">						<label>Branch data</label>						<selected>0</selected>						<object class="wxPanel" name="m_panel21">							<style>wxTAB_TRAVERSAL</style>							<object class="wxGridSizer">								<rows>1</rows>								<cols>2</cols>								<vgap>0</vgap>								<hgap>0</hgap>								<object class="sizeritem">									<option>1</option>									<flag>wxEXPAND</flag>									<border>5</border>									<object class="wxStaticBoxSizer">										<orient>wxVERTICAL</orient>										<label>Branch Search List</label>										<object class="sizeritem">											<option>0</option>											<flag>wxEXPAND</flag>											<border>5</border>											<object class="wxBoxSizer">												<orient>wxHORIZONTAL</orient>												<object class="sizeritem">													<option>1</option>													<flag>wxEXPAND</flag>													<border>5</border>													<object class="wxBoxSizer">														<orient>wxVERTICAL</orient>														<object class="sizeritem">															<option>0</option>															<flag>wxALL</flag>															<border>5</border>															<object class="wxRadioBox" name="RadioBoxBranch">																<style>wxRA_SPECIFY_ROWS</style>																<label></label>																<selection>0</selection>																<content>																	<item>Right Side Branch</item>																	<item>Left Side Branch</item>																</content>																<dimension>2</dimension>															</object>														</object>													</object>												</object>												<object class="sizeritem">													<option>1</option>													<flag>wxEXPAND</flag>													<border>5</border>													<object class="wxBoxSizer">														<orient>wxVERTICAL</orient>														<object class="sizeritem">															<option>0</option>															<flag>wxTOP</flag>															<border>10</border>															<object class="wxStaticText" name="StaticTextRightBranch">																<label>:</label>																<wrap>-1</wrap>															</object>														</object>														<object class="sizeritem">															<option>0</option>															<flag>wxTOP</flag>															<border>10</border>															<object class="wxStaticText" name="StaticTextLeftBranch">																<label>:</label>																<wrap>-1</wrap>															</object>														</object>													</object>												</object>											</object>										</object>										<object class="sizeritem">											<option>0</option>											<flag>wxEXPAND</flag>											<border>5</border>											<object class="wxBoxSizer">												<orient>wxHORIZONTAL</orient>												<object class="spacer">													<option>1</option>													<flag>wxEXPAND</flag>													<border>5</border>													<size>0,0</size>												</object>												<object class="sizeritem">													<option>0</option>													<flag>wxALIGN_RIGHT|wxALL</flag>													<border>5</border>													<object class="wxButton" name="ButtonTestSearch">														<label>Test Search</label>														<default>0</default>													</object>												</object>												<object class="sizeritem">													<option>0</option>													<flag>wxALL</flag>													<border>5</border>													<object class="wxButton" name="ButtonReservation">														<label>Reservation</label>														<default>0</default>													</object>												</object>											</object>										</object>										<object class="sizeritem">											<option>2</option>											<flag>wxALL|wxEXPAND</flag>											<border>5</border>											<object class="wxCheckListBox" name="m_checkList17">												<style>wxLB_ALWAYS_SB|wxLB_SORT</style>												<content>													<item>test</item>													<item>test2</item>													<item>test3</item>												</content>											</object>										</object>										<object class="sizeritem">											<option>0</option>											<flag>wxALL</flag>											<border>5</border>											<object class="wxButton" name="m_button8">												<label>Search</label>												<default>0</default>											</object>										</object>									</object>								</object>								<object class="sizeritem">									<option>1</option>									<flag>wxEXPAND</flag>									<border>5</border>									<object class="wxStaticBoxSizer">										<orient>wxVERTICAL</orient>										<label>Branch Data</label>										<object class="sizeritem">											<option>0</option>											<flag>wxALL|wxEXPAND</flag>											<border>5</border>											<object class="wxTreeCtrl" name="m_treeCtrl2">												<size>-1,100</size>											</object>										</object>										<object class="sizeritem">											<option>0</option>											<flag>wxALL</flag>											<border>5</border>											<object class="wxButton" name="m_button9">												<label>Load</label>												<default>0</default>											</object>										</object>									</object>								</object>							</object>						</object>					</object>					<object class="notebookpage">						<label>Branch Pruning</label>						<selected>0</selected>						<object class="wxPanel" name="m_panel2">							<style>wxTAB_TRAVERSAL</style>						</object>					</object>					<object class="notebookpage">						<label>Path Integration</label>						<selected>0</selected>						<object class="wxPanel" name="m_panel3">							<style>wxTAB_TRAVERSAL</style>						</object>					</object>				</object>			</object>			<object class="sizeritem">				<option>0</option>				<flag>wxEXPAND</flag>				<border>5</border>				<object class="wxBoxSizer">					<orient>wxHORIZONTAL</orient>					<object class="sizeritem">						<option>0</option>						<flag>wxALL</flag>						<border>5</border>						<object class="wxRadioButton" name="m_radioBtn1">							<label>replot</label>							<value>0</value>						</object>					</object>					<object class="sizeritem">						<option>0</option>						<flag>wxALL</flag>						<border>5</border>						<object class="wxRadioButton" name="m_radioBtn2">							<label>plot on New figure</label>							<value>0</value>						</object>					</object>				</object>			</object>		</object>	</object>	<object class="wxPanel" name="MyPanel2">		<style>wxTAB_TRAVERSAL</style>		<size>500,300</size>		<object class="wxBoxSizer">			<orient>wxVERTICAL</orient>			<object class="sizeritem">				<option>1</option>				<flag>wxALL|wxEXPAND</flag>				<border>5</border>				<object class="wxTreeCtrl" name="m_treeCtrl1">					<style>wxTR_DEFAULT_STYLE|wxTR_HAS_BUTTONS</style>				</object>			</object>			<object class="sizeritem">				<option>1</option>				<flag>wxALL|wxEXPAND</flag>				<border>5</border>				<object class='class ListCtrlComboPopup(wx.ListCtrl, wx.combo.ComboPopup):&#x0A;        &#x0A;    def __init__(self, log=None):&#x0A;        if log:&#x0A;            self.log = log&#x0A;        else:&#x0A;            self.log = NullLog()&#x0A;            &#x0A;        &#x0A;        # Since we are using multiple inheritance, and don&apos;t know yet&#x0A;        # which window is to be the parent, we&apos;ll do 2-phase create of&#x0A;        # the ListCtrl instead, and call its Create method later in&#x0A;        # our Create method.  (See Create below.)&#x0A;        self.PostCreate(wx.PreListCtrl())&#x0A;&#x0A;        # Also init the ComboPopup base class.&#x0A;        wx.combo.ComboPopup.__init__(self)&#x0A;        &#x0A;&#x0A;    def AddItem(self, txt):&#x0A;        self.InsertStringItem(self.GetItemCount(), txt)&#x0A;&#x0A;    def OnMotion(self, evt):&#x0A;        item, flags = self.HitTest(evt.GetPosition())&#x0A;        if item &gt;= 0:&#x0A;            self.Select(item)&#x0A;            self.curitem = item&#x0A;&#x0A;    def OnLeftDown(self, evt):&#x0A;        self.value = self.curitem&#x0A;        self.Dismiss()&#x0A;&#x0A;&#x0A;    # The following methods are those that are overridable from the&#x0A;    # ComboPopup base class.  Most of them are not required, but all&#x0A;    # are shown here for demonstration purposes.&#x0A;&#x0A;&#x0A;    # This is called immediately after construction finishes.  You can&#x0A;    # use self.GetCombo if needed to get to the ComboCtrl instance.&#x0A;    def Init(self):&#x0A;        self.log.write(&quot;ListCtrlComboPopup.Init&quot;)&#x0A;        self.value = -1&#x0A;        self.curitem = -1&#x0A;&#x0A;&#x0A;    # Create the popup child control.  Return true for success.&#x0A;    def Create(self, parent):&#x0A;        self.log.write(&quot;ListCtrlComboPopup.Create&quot;)&#x0A;        wx.ListCtrl.Create(self, parent,&#x0A;                           style=wx.LC_LIST|wx.LC_SINGLE_SEL|wx.SIMPLE_BORDER)&#x0A;        self.Bind(wx.EVT_MOTION, self.OnMotion)&#x0A;        self.Bind(wx.EVT_LEFT_DOWN, self.OnLeftDown)&#x0A;        return True&#x0A;&#x0A;&#x0A;    # Return the widget that is to be used for the popup&#x0A;    def GetControl(self):&#x0A;        #self.log.write(&quot;ListCtrlComboPopup.GetControl&quot;)&#x0A;        return self&#x0A;&#x0A;    # Called just prior to displaying the popup, you can use it to&#x0A;    # &apos;select&apos; the current item.&#x0A;    def SetStringValue(self, val):&#x0A;        self.log.write(&quot;ListCtrlComboPopup.SetStringValue&quot;)&#x0A;        idx = self.FindItem(-1, val)&#x0A;        if idx != wx.NOT_FOUND:&#x0A;            self.Select(idx)&#x0A;&#x0A;    # Return a string representation of the current item.&#x0A;    def GetStringValue(self):&#x0A;        self.log.write(&quot;ListCtrlComboPopup.GetStringValue&quot;)&#x0A;        if self.value &gt;= 0:&#x0A;            return self.GetItemText(self.value)&#x0A;        return &quot;&quot;&#x0A;&#x0A;    # Called immediately after the popup is shown&#x0A;    def OnPopup(self):&#x0A;        self.log.write(&quot;ListCtrlComboPopup.OnPopup&quot;)&#x0A;        wx.combo.ComboPopup.OnPopup(self)&#x0A;&#x0A;    # Called when popup is dismissed&#x0A;    def OnDismiss(self):&#x0A;        self.log.write(&quot;ListCtrlComboPopup.OnDismiss&quot;)&#x0A;        wx.combo.ComboPopup.OnDismiss(self)&#x0A;&#x0A;    # This is called to custom paint in the combo control itself&#x0A;    # (ie. not the popup).  Default implementation draws value as&#x0A;    # string.&#x0A;    def PaintComboControl(self, dc, rect):&#x0A;        self.log.write(&quot;ListCtrlComboPopup.PaintComboControl&quot;)&#x0A;        wx.combo.ComboPopup.PaintComboControl(self, dc, rect)&#x0A;&#x0A;    # Receives key events from the parent ComboCtrl.  Events not&#x0A;    # handled should be skipped, as usual.&#x0A;    def OnComboKeyEvent(self, event):&#x0A;        self.log.write(&quot;ListCtrlComboPopup.OnComboKeyEvent&quot;)&#x0A;        wx.combo.ComboPopup.OnComboKeyEvent(self, event)&#x0A;&#x0A;    # Implement if you need to support special action when user&#x0A;    # double-clicks on the parent wxComboCtrl.&#x0A;    def OnComboDoubleClick(self):&#x0A;        self.log.write(&quot;ListCtrlComboPopup.OnComboDoubleClick&quot;)&#x0A;        wx.combo.ComboPopup.OnComboDoubleClick(self)&#x0A;&#x0A;    # Return final size of popup. Called on every popup, just prior to OnPopup.&#x0A;    # minWidth = preferred minimum width for window&#x0A;    # prefHeight = preferred height. Only applies if &gt; 0,&#x0A;    # maxHeight = max height for window, as limited by screen size&#x0A;    #   and should only be rounded down, if necessary.&#x0A;    def GetAdjustedSize(self, minWidth, prefHeight, maxHeight):&#x0A;        self.log.write(&quot;ListCtrlComboPopup.GetAdjustedSize: %d, %d, %d&quot; % (minWidth, prefHeight, maxHeight))&#x0A;        return wx.combo.ComboPopup.GetAdjustedSize(self, minWidth, prefHeight, maxHeight)&#x0A;&#x0A;    # Return true if you want delay the call to Create until the popup&#x0A;    # is shown for the first time. It is more efficient, but note that&#x0A;    # it is often more convenient to have the control created&#x0A;    # immediately.    &#x0A;    # Default returns false.&#x0A;    def LazyCreate(self):&#x0A;        self.log.write(&quot;ListCtrlComboPopup.LazyCreate&quot;)&#x0A;        return wx.combo.ComboPopup.LazyCreate(self)&#x0A;        ' name="m_customControl2" />			</object>		</object>	</object></resource>